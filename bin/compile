#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

### Configure environment

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Configure directories

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd "$(dirname "${0:-}")"; cd ..; pwd)

source "$BP_DIR/lib/output.sh"

build_start_time=$(nowms)

if [ ! -f "$ENV_DIR/APP_ROOT" ]; then
  error "APP_ROOT not set. Aborting."
  exit 1
fi

APP_ROOT="$(cat "$ENV_DIR/APP_ROOT")"
APP_NAME=`cat $BUILD_DIR/$APP_ROOT/package.json | jq -r ".name"`

if [ ! -d "$BUILD_DIR/$APP_ROOT" ]; then
  error "No project found at $APP_ROOT. Aborting."
  exit 1
fi

cd $BUILD_DIR

if [ -f "$BUILD_DIR/.workspaces-prebuild" ]; then
  while read in; do yarn workspace "$in"; done < "$BUILD_DIR/.workspaces-prebuild"
fi

header "build ${APP_NAME}"
yarn workspace $APP_NAME run build

# Pull in the selected app to the root directory
rsync -r "$BUILD_DIR/$APP_ROOT/" $BUILD_DIR/ --exclude "node_modules"

# Delete the original sub-directory and node_modules symlink
rm "$BUILD_DIR/node_modules/$APP_NAME"
rm -rf "$BUILD_DIR/$APP_ROOT"
